---
# source: https://github.com/crossplane-contrib/provider-kubernetes/blob/main/examples/provider/config-in-cluster.yaml
# Make sure provider-kubernetes has enough permissions to install your objects into cluster
#
# You can give admin permissions by running:
# SA=$(kubectl -n crossplane-system get sa -o name | grep provider-kubernetes | sed -e 's|serviceaccount\/|crossplane-system:|g')
# kubectl create clusterrolebinding provider-kubernetes-admin-binding --clusterrole cluster-admin --serviceaccount="${SA}"
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  name: local
spec:
  credentials:
    source: InjectedIdentity
---
#apiVersion: v1
#kind: Secret
#metadata:
#  namespace: crossplane-system
#  name: example-provider-secret
#type: Opaque
#data:
  # credentials: BASE64ENCODED_PROVIDER_CREDS
###---
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  name: xpaks1
spec:
  credentials:
    source: Secret
    secretRef:
      namespace: crossplane-system
      name: mboxpaks1-connDetails
      key: kubeconfig
# identity:
#   type: GoogleApplicationCredentials
#   source: Secret
#   secretRef:
#     name: gcp-credentials
#     namespace: crossplane-system
#     key: credentials.json
